class Solution {
    public List<List<String>> partition(String s) {
        List<String> ll =new ArrayList<>();
        List<List<String>> ans1=new ArrayList<>();
        partitioning(s,ll,ans1);
        return ans1;
       
    }
    public static boolean ispalindrome(String s){
        int i=0;
        int j=s.length()-1;
        while(i<j){
            if(s.charAt(i)!=s.charAt(j)){
                return false;
            }
            i++;
            j--;
        }
        return true;
    }
    public static void partitioning(String ques, List<String> ll,List<List<String>>ans1){
        if(ques.length()==0){
           ans1.add(new ArrayList<>(ll));
            return;
        }
        for(int i=1;i<=ques.length();i++){
            String s=ques.substring(0,i);
            if(ispalindrome(s)){
                ll.add(s);
                partitioning(ques.substring(i),ll,ans1);
                ll.remove(ll.size()-1);
            }
           
        }
    }
}
